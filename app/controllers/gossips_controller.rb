class GossipsController < ApplicationController

  def index
    # MÃ©thode qui rÃ©cupÃ¨re tous les potins et les envoie Ã  la view index (index.html.erb) pour affichage
  end

  def show
    # MÃ©thode qui rÃ©cupÃ¨re le potin concernÃ© et l'envoie Ã  la view show (show.html.erb) pour affichage
     @gossip = Gossip.find(params[:id])
  end

  def new
    # MÃ©thode qui crÃ©e un potin vide et l'envoie Ã  une view qui affiche le formulaire pour 'le remplir' (new.html.erb)
    @gossip = Gossip.new
  end

  def create
    # MÃ©thode qui crÃ©Ã© un potin Ã  partir du contenu du formulaire de new.html.erb, soumis par l'utilisateur
    # pour info, le contenu de ce formulaire sera accessible dans le hash params (ton meilleur pote)
    # Une fois la crÃ©ation faite, on redirige gÃ©nÃ©ralement vers la mÃ©thode show (pour afficher le potin crÃ©Ã©)
    @gossip=Gossip.new
    @gossip.title=params["title"]
    @gossip.content=params["content"]
    @gossip.user = User.first

    if @gossip.save 
      render "new"
      puts"tout va bien j'ai rÃ©ussi Ã  crÃ©er mon instance ðŸ‘Œ"
    else
      render "new"
      puts "hey ! les validations ne sont pas passÃ©es, je te renvoie une ou plusieurs erreurs"
    end
  end

  def edit
    @gossip = Gossip.find(params[:id])
    # MÃ©thode qui rÃ©cupÃ¨re le potin concernÃ© et l'envoie Ã  la view edit (edit.html.erb) pour affichage dans un formulaire d'Ã©dition
  end

  def update
    @gossip = Gossip.find(params[:id])
    gossip_params = params.require(:gossip).permit(:title, :content)
    if @gossip.update(gossip_params)
      flash[:success] = "Tu as bien modifiÃ© le potin"
      redirect_to gossip_path
    else
      render :edit
    # MÃ©thode qui met Ã  jour le potin Ã  partir du contenu du formulaire de edit.html.erb, soumis par l'utilisateur
    # pour info, le contenu de ce formulaire sera accessible dans le hash params
    # Une fois la modification faite, on redirige gÃ©nÃ©ralement vers la mÃ©thode show (pour afficher le potin modifiÃ©)
    end
  end

  def destroy
    @gossip = Gossip.find(params[:id])
    @gossip.destroy
    flash[:success] = "Tu as bien supprimÃ© le potin"
    redirect_to root_path
    # MÃ©thode qui rÃ©cupÃ¨re le potin concernÃ© et le dÃ©truit en base
    # Une fois la suppression faite, on redirige gÃ©nÃ©ralement vers la mÃ©thode index (pour afficher la liste Ã  jour)
  end
end


